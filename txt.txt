router.post('/category-management',upload.none(),catagory,()=>{
  console.log('hello redirected')
  res.render('admin/category-management',{admin:true})
});

const { catagory } = require("../controller/catagory");



const Catagory = require("../models/catagory");

exports.catagory = (req, res, next) => {
  const catagory = new Catagory({
    name: req.body.name,
  });

  catagory
    .save()
    .then((catagory) => {
      console.log(catagory);
    })

    .catch((err) => {
      console.log("err");
    });

    // res.redirect('/admin/category-management')
    next()
};




router.get('/delete-catagory/:id',upload.none(),deletecatagory=async(req,res)=>{
  let catagoryid = req.params.id
  
  console.log(catagoryid)
  Catagory.findByIdAndRemove(catagoryid).then(catagory=>{
    if(catagory){
      console.log("Catagory deleted")
      res.redirect('/admin/view-category-management')

    }
    else{
     console.log('some error in deleting catagry')
    }
  }).catch(err=>{
    return res.satatus(400).json({err})
  })
})








const mongoose = require("mongoose");
//PRODUCT SCHEMA

const productSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    trim: true,
  },
  price: {
    type: Number,
    required: true,
  },
  mrp: {
    type: Number,
  },
  discription: {
    type: String,
  },
  brand: {
    type: String,
  },
  quantity: {
    type: Number,
    required: true,
  },
  stockAlart: {
    type: Number,
  },
  isfeatured: {
    type: Boolean,
    default: false,
  },

  image: [
    //nested documents
    {
      img: { type: String },
    },
  ],
  dateCreated: {
    type: Date,
    default: Date.now,
  },
});
module.exports = mongoose.model("Product", productSchema);

